;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name replumb.target, :imports nil, :requires {browser replumb.target.browser, replumb.target.browser replumb.target.browser, nodejs replumb.target.nodejs, replumb.target.nodejs replumb.target.nodejs}, :uses nil, :defs {browser-default-opts {:name replumb.target/browser-default-opts, :file "resources/public/js/out/replumb/target.cljs", :line 5, :column 1, :end-line 5, :end-column 26, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/replumb/target.cljs", :line 5, :column 6, :end-line 5, :end-column 26}, :doc "Browser default set of options for read-eval-call."}, nodejs-default-opts {:name replumb.target/nodejs-default-opts, :file "resources/public/js/out/replumb/target.cljs", :line 11, :column 1, :end-line 11, :end-column 25, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/replumb/target.cljs", :line 11, :column 6, :end-line 11, :end-column 25}, :doc "Node.js default set of options for read-eval-call.\n  It is intentionally missing :load-fn! that will need to be added\n  before calling read-eval-call. See nodejs-opts."}, default-opts {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/replumb/target.cljs", :line 18, :column 7, :end-line 18, :end-column 19, :arglists (quote ([] [target])), :doc "Given a target (string or keyword), returns the default option map\n  for it. The no-arity version returns the browser default options.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [target]), :arglists ([] [target]), :arglists-meta (nil nil)}}, :name replumb.target/default-opts, :variadic false, :file "resources/public/js/out/replumb/target.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [target]), :arglists ([] [target]), :arglists-meta (nil nil)}, :method-params ([] [target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists ([] [target]), :doc "Given a target (string or keyword), returns the default option map\n  for it. The no-arity version returns the browser default options."}, fake-load-fn! {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/replumb/target.cljs", :line 28, :column 7, :end-line 28, :end-column 20, :arglists (quote ([_ cb])), :doc "This load function just calls:\n  (cb {:lang   :js\n       :source \"\"})"}, :name replumb.target/fake-load-fn!, :variadic false, :file "resources/public/js/out/replumb/target.cljs", :end-column 20, :method-params ([_ cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ cb])), :doc "This load function just calls:\n  (cb {:lang   :js\n       :source \"\"})"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:js :init-fns :default :nodejs :source :lang :load-fn! :target}, :order [:target :load-fn! :init-fns :default :nodejs :lang :source :js]}, :doc nil}