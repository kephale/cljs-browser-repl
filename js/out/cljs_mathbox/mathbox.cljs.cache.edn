;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name cljs-mathbox.mathbox, :imports nil, :requires {async cljs.core.async, cljs.core.async cljs.core.async, cljsjs.mathbox cljsjs.mathbox}, :uses nil, :defs {get-props {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/cljs_mathbox/mathbox.cljs", :line 86, :column 7, :end-line 86, :end-column 16, :arglists (quote ([mb-instance id]))}, :name cljs-mathbox.mathbox/get-props, :variadic false, :file "resources/public/js/out/cljs_mathbox/mathbox.cljs", :end-column 16, :method-params ([mb-instance id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([mb-instance id]))}, axis {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/cljs_mathbox/mathbox.cljs", :line 59, :column 7, :end-line 59, :end-column 11, :arglists (quote ([mb-instance opts-map]))}, :name cljs-mathbox.mathbox/axis, :variadic false, :file "resources/public/js/out/cljs_mathbox/mathbox.cljs", :end-column 11, :method-params ([mb-instance opts-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([mb-instance opts-map]))}, get-prop {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/cljs_mathbox/mathbox.cljs", :line 89, :column 7, :end-line 89, :end-column 15, :arglists (quote ([mb-instance id prop-name]))}, :name cljs-mathbox.mathbox/get-prop, :variadic false, :file "resources/public/js/out/cljs_mathbox/mathbox.cljs", :end-column 15, :method-params ([mb-instance id prop-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 3, :fn-var true, :arglists (quote ([mb-instance id prop-name]))}, viewport {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/cljs_mathbox/mathbox.cljs", :line 99, :column 7, :end-line 99, :end-column 15, :arglists (quote ([mb-instance opts-map]))}, :name cljs-mathbox.mathbox/viewport, :variadic false, :file "resources/public/js/out/cljs_mathbox/mathbox.cljs", :end-column 15, :method-params ([mb-instance opts-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 2, :fn-var true, :arglists (quote ([mb-instance opts-map]))}, mb-clone {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/cljs_mathbox/mathbox.cljs", :line 116, :column 7, :end-line 116, :end-column 15, :arglists (quote ([mb-instance id new-opts-map animation-opts-map])), :doc "Named mb-clone in order to not shadow core/clone"}, :name cljs-mathbox.mathbox/mb-clone, :variadic false, :file "resources/public/js/out/cljs_mathbox/mathbox.cljs", :end-column 15, :method-params ([mb-instance id new-opts-map animation-opts-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 4, :fn-var true, :arglists (quote ([mb-instance id new-opts-map animation-opts-map])), :doc "Named mb-clone in order to not shadow core/clone"}, surface {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/cljs_mathbox/mathbox.cljs", :line 65, :column 7, :end-line 65, :end-column 14, :arglists (quote ([mb-instance opts-map]))}, :name cljs-mathbox.mathbox/surface, :variadic false, :file "resources/public/js/out/cljs_mathbox/mathbox.cljs", :end-column 14, :method-params ([mb-instance opts-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists (quote ([mb-instance opts-map]))}, bezier {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/cljs_mathbox/mathbox.cljs", :line 53, :column 7, :end-line 53, :end-column 13, :arglists (quote ([mb-instance opts-map]))}, :name cljs-mathbox.mathbox/bezier, :variadic false, :file "resources/public/js/out/cljs_mathbox/mathbox.cljs", :end-column 13, :method-params ([mb-instance opts-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([mb-instance opts-map]))}, bezier-surface {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/cljs_mathbox/mathbox.cljs", :line 56, :column 7, :end-line 56, :end-column 21, :arglists (quote ([mb-instance opts-map]))}, :name cljs-mathbox.mathbox/bezier-surface, :variadic false, :file "resources/public/js/out/cljs_mathbox/mathbox.cljs", :end-column 21, :method-params ([mb-instance opts-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([mb-instance opts-map]))}, mb-vector {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/cljs_mathbox/mathbox.cljs", :line 72, :column 7, :end-line 72, :end-column 16, :arglists (quote ([mb-instance opts-map])), :doc "Named mb-vector in order to not shadow core/vector"}, :name cljs-mathbox.mathbox/mb-vector, :variadic false, :file "resources/public/js/out/cljs_mathbox/mathbox.cljs", :end-column 16, :method-params ([mb-instance opts-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([mb-instance opts-map])), :doc "Named mb-vector in order to not shadow core/vector"}, platonic {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/cljs_mathbox/mathbox.cljs", :line 47, :column 7, :end-line 47, :end-column 15, :arglists (quote ([mb-instance opts-map]))}, :name cljs-mathbox.mathbox/platonic, :variadic false, :file "resources/public/js/out/cljs_mathbox/mathbox.cljs", :end-column 15, :method-params ([mb-instance opts-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([mb-instance opts-map]))}, grid {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/cljs_mathbox/mathbox.cljs", :line 62, :column 7, :end-line 62, :end-column 11, :arglists (quote ([mb-instance opts-map]))}, :name cljs-mathbox.mathbox/grid, :variadic false, :file "resources/public/js/out/cljs_mathbox/mathbox.cljs", :end-column 11, :method-params ([mb-instance opts-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([mb-instance opts-map]))}, mb-remove {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/cljs_mathbox/mathbox.cljs", :line 78, :column 7, :end-line 78, :end-column 16, :arglists (quote ([mb-instance id animation-opts-map])), :doc "Remove an object from the stage, with animation props to control eg duration"}, :name cljs-mathbox.mathbox/mb-remove, :variadic false, :file "resources/public/js/out/cljs_mathbox/mathbox.cljs", :end-column 16, :method-params ([mb-instance id animation-opts-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 3, :fn-var true, :arglists (quote ([mb-instance id animation-opts-map])), :doc "Remove an object from the stage, with animation props to control eg duration"}, animate {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/cljs_mathbox/mathbox.cljs", :line 108, :column 7, :end-line 108, :end-column 14, :arglists (quote ([mb-instance id new-opts-map animation-opts-map]))}, :name cljs-mathbox.mathbox/animate, :variadic false, :file "resources/public/js/out/cljs_mathbox/mathbox.cljs", :end-column 14, :method-params ([mb-instance id new-opts-map animation-opts-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 4, :fn-var true, :arglists (quote ([mb-instance id new-opts-map animation-opts-map]))}, create-mathbox {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/cljs_mathbox/mathbox.cljs", :line 16, :column 7, :end-line 16, :end-column 21, :arglists (quote ([shader-file opts-map & divname])), :doc "Create and return a mathbox instance. mathBox must be defined as a top-level\n  JS variable (which just means loading the library in your HTML file). The instance will be attached to a div you name (or 'mathboxdiv' if divname is nil)", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(shader-file opts-map divname)], :arglists ([shader-file opts-map & divname]), :arglists-meta (nil)}}, :name cljs-mathbox.mathbox/create-mathbox, :variadic true, :file "resources/public/js/out/cljs_mathbox/mathbox.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(shader-file opts-map divname)], :arglists ([shader-file opts-map & divname]), :arglists-meta (nil)}, :method-params [(shader-file opts-map divname)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists ([shader-file opts-map & divname]), :doc "Create and return a mathbox instance. mathBox must be defined as a top-level\n  JS variable (which just means loading the library in your HTML file). The instance will be attached to a div you name (or 'mathboxdiv' if divname is nil)"}, set-props! {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/cljs_mathbox/mathbox.cljs", :line 94, :column 7, :end-line 94, :end-column 17, :arglists (quote ([mb-instance id opts-map]))}, :name cljs-mathbox.mathbox/set-props!, :variadic false, :file "resources/public/js/out/cljs_mathbox/mathbox.cljs", :end-column 17, :method-params ([mb-instance id opts-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 3, :fn-var true, :arglists (quote ([mb-instance id opts-map]))}, curve {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/cljs_mathbox/mathbox.cljs", :line 50, :column 7, :end-line 50, :end-column 12, :arglists (quote ([mb-instance opts-map]))}, :name cljs-mathbox.mathbox/curve, :variadic false, :file "resources/public/js/out/cljs_mathbox/mathbox.cljs", :end-column 12, :method-params ([mb-instance opts-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([mb-instance opts-map]))}, camera {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/resources/public/js/out/cljs_mathbox/mathbox.cljs", :line 102, :column 7, :end-line 102, :end-column 13, :arglists (quote ([mb-instance opts-map]))}, :name cljs-mathbox.mathbox/camera, :variadic false, :file "resources/public/js/out/cljs_mathbox/mathbox.cljs", :end-column 13, :method-params ([mb-instance opts-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 2, :fn-var true, :arglists (quote ([mb-instance opts-map]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:expression :else :elementResize :cursor :recur :stats :cameraControls}, :order [:cameraControls :cursor :stats :elementResize :expression :recur :else]}, :doc nil}