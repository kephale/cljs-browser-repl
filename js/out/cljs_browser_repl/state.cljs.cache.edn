;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name cljs-browser-repl.state, :imports nil, :requires {reagent.core reagent.core, repl replumb.repl, replumb.repl replumb.repl}, :uses {atom reagent.core}, :defs {empty-notebook {:name cljs-browser-repl.state/empty-notebook, :file "src/cljs_browser_repl/state.cljs", :line 55, :column 1, :end-line 55, :end-column 20, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/state.cljs", :line 55, :column 6, :end-line 55, :end-column 20}}, input {:name cljs-browser-repl.state/input, :file "src/cljs_browser_repl/state.cljs", :line 51, :column 1, :end-line 51, :end-column 15, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/state.cljs", :line 51, :column 10, :end-line 51, :end-column 15}}, current-command {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/state.cljs", :line 65, :column 7, :end-line 65, :end-column 22, :arglists (quote ([notebook]))}, :name cljs-browser-repl.state/current-command, :variadic false, :file "src/cljs_browser_repl/state.cljs", :end-column 22, :method-params ([notebook]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([notebook]))}, to-repl {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/state.cljs", :line 11, :column 7, :end-line 11, :end-column 14, :arglists (quote ([o]))}, :name cljs-browser-repl.state/to-repl, :variadic false, :file "src/cljs_browser_repl/state.cljs", :end-column 14, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o]))}, now {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/state.cljs", :line 7, :column 7, :end-line 7, :end-column 10, :arglists (quote ([]))}, :name cljs-browser-repl.state/now, :variadic false, :file "src/cljs_browser_repl/state.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-entry {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/state.cljs", :line 8, :column 7, :end-line 8, :end-column 16, :arglists (quote ([h e]))}, :name cljs-browser-repl.state/add-entry, :variadic false, :file "src/cljs_browser_repl/state.cljs", :end-column 16, :method-params ([h e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([h e]))}, history {:name cljs-browser-repl.state/history, :file "src/cljs_browser_repl/state.cljs", :line 43, :column 1, :end-line 43, :end-column 17, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/state.cljs", :line 43, :column 10, :end-line 43, :end-column 17}}, current-notebook {:name cljs-browser-repl.state/current-notebook, :file "src/cljs_browser_repl/state.cljs", :line 63, :column 1, :end-line 63, :end-column 26, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/state.cljs", :line 63, :column 10, :end-line 63, :end-column 26}}, to-repl-input {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/state.cljs", :line 13, :column 7, :end-line 13, :end-column 20, :arglists (quote ([source]))}, :name cljs-browser-repl.state/to-repl-input, :variadic false, :file "src/cljs_browser_repl/state.cljs", :end-column 20, :method-params ([source]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([source]))}, initial-history-messages {:name cljs-browser-repl.state/initial-history-messages, :file "src/cljs_browser_repl/state.cljs", :line 19, :column 1, :end-line 19, :end-column 30, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/state.cljs", :line 19, :column 6, :end-line 19, :end-column 30}}, to-repl-entry {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/state.cljs", :line 17, :column 7, :end-line 17, :end-column 20, :arglists (quote ([t source]))}, :name cljs-browser-repl.state/to-repl-entry, :variadic false, :file "src/cljs_browser_repl/state.cljs", :end-column 20, :method-params ([t source]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t source]))}, to-repl-result {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/state.cljs", :line 15, :column 7, :end-line 15, :end-column 21, :arglists (quote ([resp]))}, :name cljs-browser-repl.state/to-repl-result, :variadic false, :file "src/cljs_browser_repl/state.cljs", :end-column 21, :method-params ([resp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([resp]))}, current-ns {:name cljs-browser-repl.state/current-ns, :file "src/cljs_browser_repl/state.cljs", :line 47, :column 1, :end-line 47, :end-column 20, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/state.cljs", :line 47, :column 10, :end-line 47, :end-column 20}}, to-repl-error {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/state.cljs", :line 14, :column 7, :end-line 14, :end-column 20, :arglists (quote ([err]))}, :name cljs-browser-repl.state/to-repl-error, :variadic false, :file "src/cljs_browser_repl/state.cljs", :end-column 20, :method-params ([err]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([err]))}, add-entries {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/state.cljs", :line 9, :column 7, :end-line 9, :end-column 18, :arglists (quote ([h es]))}, :name cljs-browser-repl.state/add-entries, :variadic false, :file "src/cljs_browser_repl/state.cljs", :end-column 18, :method-params ([h es]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([h es]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:response :markdown :date :value :file :type :cmds :id :file-name :gist :position :error :input}, :order [:date :type :value :input :error :response :markdown :id :gist :file-name :file :cmds :position]}, :doc nil}