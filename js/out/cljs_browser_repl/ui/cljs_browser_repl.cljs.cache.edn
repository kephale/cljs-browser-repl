;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name cljs-browser-repl.ui.cljs-browser-repl, :imports nil, :requires {cljs-browser-repl.ui.top-bar cljs-browser-repl.ui.top-bar, cljs-browser-repl.compiler cljs-browser-repl.compiler, cljs-browser-repl.actions.notebook cljs-browser-repl.actions.notebook, cljs-browser-repl.state cljs-browser-repl.state, cljs-browser-repl.ui.history cljs-browser-repl.ui.history, router cljs-browser-repl.router, cljs-browser-repl.router cljs-browser-repl.router, events goog.events, cljs-browser-repl.ui.repl-input cljs-browser-repl.ui.repl-input, state cljs-browser-repl.state, string clojure.string, clojure.string clojure.string, cljs-browser-repl.actions.repl cljs-browser-repl.actions.repl, goog.events goog.events}, :uses {is-readable? cljs-browser-repl.compiler, play-notebook! cljs-browser-repl.actions.notebook, repl-input cljs-browser-repl.ui.repl-input, history cljs-browser-repl.ui.history, top-bar cljs-browser-repl.ui.top-bar, repl-entry! cljs-browser-repl.actions.repl, new-input! cljs-browser-repl.actions.repl}, :defs {cljs-browser-repl-raw {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/ui/cljs_browser_repl.cljs", :line 14, :column 7, :end-line 14, :end-column 28, :arglists (quote ([]))}, :name cljs-browser-repl.ui.cljs-browser-repl/cljs-browser-repl-raw, :variadic false, :file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/ui/cljs_browser_repl.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, cljs-browser-repl {:name cljs-browser-repl.ui.cljs-browser-repl/cljs-browser-repl, :file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/ui/cljs_browser_repl.cljs", :line 35, :column 1, :end-line 35, :end-column 23, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/ui/cljs_browser_repl.cljs", :line 35, :column 6, :end-line 35, :end-column 23}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:valid-input? :div.cljs-browser-repl :value :component-did-mount :pre-label :on-valid-input :on-event :component-will-unmount :on-change}, :order [:div.cljs-browser-repl :on-event :value :pre-label :valid-input? :on-valid-input :on-change :component-did-mount :component-will-unmount]}, :doc nil}