;; Analyzed by ClojureScript 1.7.170
{:use-macros {with-compiler-env cljs.env.macros}, :excludes #{}, :name cljs-browser-repl.compiler, :imports {XhrIo goog.net.XhrIo}, :requires {replumb replumb.core, replumb.core replumb.core, replumb.repl replumb.repl, mathbox cljs-mathbox.mathbox, cljs-mathbox.mathbox cljs-mathbox.mathbox, XhrIo goog.net.XhrIo}, :uses {repl-read-string replumb.repl, current-ns replumb.repl}, :defs {fetch-file! {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/compiler.cljs", :line 19, :column 7, :end-line 19, :end-column 18, :arglists (quote ([file-url src-cb])), :doc "Very simple implementation of XMLHttpRequests that given a file path\n  calls src-cb with the string fetched of nil in case of error.\n  See doc at https://developers.google.com/closure/library/docs/xhrio"}, :name cljs-browser-repl.compiler/fetch-file!, :variadic false, :file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/compiler.cljs", :end-column 18, :method-params ([file-url src-cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([file-url src-cb])), :doc "Very simple implementation of XMLHttpRequests that given a file path\n  calls src-cb with the string fetched of nil in case of error.\n  See doc at https://developers.google.com/closure/library/docs/xhrio"}, cljs-read-eval-print! {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/compiler.cljs", :line 33, :column 7, :end-line 33, :end-column 28, :arglists (quote ([line cb]))}, :name cljs-browser-repl.compiler/cljs-read-eval-print!, :variadic false, :file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/compiler.cljs", :end-column 28, :method-params ([line cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([line cb]))}, is-readable? {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/compiler.cljs", :line 44, :column 7, :end-line 44, :end-column 19, :arglists (quote ([line]))}, :name cljs-browser-repl.compiler/is-readable?, :variadic false, :file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/compiler.cljs", :end-column 19, :method-params ([line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([line]))}}, :require-macros {cljs.env.macros cljs.env.macros}, :cljs.analyzer/constants {:seen #{:else :ns :error}, :order [:error :ns :else]}, :doc nil}