;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name cljs-browser-repl.ui.history, :imports nil, :requires {string clojure.string, clojure.string clojure.string, cljs-browser-repl.ui.history-entry cljs-browser-repl.ui.history-entry}, :uses {history-entry cljs-browser-repl.ui.history-entry}, :defs {history-raw {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/ui/history.cljs", :line 5, :column 8, :end-line 5, :end-column 19, :private true, :arglists (quote ([{:keys [on-event]} hs]))}, :private true, :name cljs-browser-repl.ui.history/history-raw, :variadic false, :file "src/cljs_browser_repl/ui/history.cljs", :end-column 19, :method-params ([p__24094 hs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [on-event]} hs]))}, history {:name cljs-browser-repl.ui.history/history, :file "src/cljs_browser_repl/ui/history.cljs", :line 11, :column 1, :end-line 11, :end-column 13, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/ui/history.cljs", :line 11, :column 6, :end-line 11, :end-column 13}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:date :key :value :div.history :component-did-update :type :component-will-update :on-event :emit}, :order [:on-event :div.history :emit :key :type :date :value :component-will-update :component-did-update]}, :doc nil}