;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name cljs-browser-repl.actions.repl, :imports nil, :requires {state cljs-browser-repl.state, cljs-browser-repl.state cljs-browser-repl.state, cljs-browser-repl.compiler cljs-browser-repl.compiler, replumb.core replumb.core, replumb.repl replumb.repl, clojure.string clojure.string}, :uses {cljs-read-eval-print! cljs-browser-repl.compiler, error->str replumb.core, current-ns replumb.repl, blank? clojure.string}, :defs {new-input! {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/actions/repl.cljs", :line 9, :column 7, :end-line 9, :end-column 17, :arglists (quote ([s]))}, :name cljs-browser-repl.actions.repl/new-input!, :variadic false, :file "src/cljs_browser_repl/actions/repl.cljs", :end-column 17, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, repl-entry! {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/actions/repl.cljs", :line 12, :column 7, :end-line 12, :end-column 18, :arglists (quote ([code] [code history?])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([code] [code history?]), :arglists ([code] [code history?]), :arglists-meta (nil nil)}}, :name cljs-browser-repl.actions.repl/repl-entry!, :variadic false, :file "src/cljs_browser_repl/actions/repl.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([code] [code history?]), :arglists ([code] [code history?]), :arglists-meta (nil nil)}, :method-params ([code] [code history?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists ([code] [code history?])}, insert-repl-intro! {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/actions/repl.cljs", :line 32, :column 7, :end-line 32, :end-column 25, :arglists (quote ([]))}, :name cljs-browser-repl.actions.repl/insert-repl-intro!, :variadic false, :file "src/cljs_browser_repl/actions/repl.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:value :error}, :order [:value :error]}, :doc nil}