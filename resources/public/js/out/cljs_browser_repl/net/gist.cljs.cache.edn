;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name cljs-browser-repl.net.gist, :imports nil, :requires {http cljs-http.client, cljs-http.client cljs-http.client, cljs.core.async cljs.core.async, cljs.pprint cljs.pprint, cljs-browser-repl.state cljs-browser-repl.state, edn cljs.reader, cljs.reader cljs.reader}, :uses {pprint cljs.pprint, <! cljs.core.async, to-repl-error cljs-browser-repl.state}, :defs {get! {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/net/gist.cljs", :line 10, :column 7, :end-line 10, :end-column 11, :arglists (quote ([id])), :doc "Retrieves a gist by id. Returns a channel that will be filled with a clj-http\n  response {:success true :body ...}"}, :name cljs-browser-repl.net.gist/get!, :variadic false, :file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/net/gist.cljs", :end-column 11, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id])), :doc "Retrieves a gist by id. Returns a channel that will be filled with a clj-http\n  response {:success true :body ...}"}, invalid-gist {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/net/gist.cljs", :line 17, :column 7, :end-line 17, :end-column 19, :arglists (quote ([gist err]))}, :name cljs-browser-repl.net.gist/invalid-gist, :variadic false, :file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/net/gist.cljs", :end-column 19, :method-params ([gist err]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gist err]))}, get-commands {:protocol-inline nil, :meta {:file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/net/gist.cljs", :line 21, :column 7, :end-line 21, :end-column 19, :arglists (quote ([gist file-name])), :doc "Given a gist it will return a list of commands for the repl to run.\n  The gist must not be truncated, must have an index.json file."}, :name cljs-browser-repl.net.gist/get-commands, :variadic false, :file "/Users/kyle/git/cljs-browser-repl/src/cljs_browser_repl/net/gist.cljs", :end-column 19, :method-params ([gist file-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gist file-name])), :doc "Given a gist it will return a list of commands for the repl to run.\n  The gist must not be truncated, must have an index.json file."}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:content :type :with-credentials? :language :truncated :files :body :keywordize-keys}, :order [:with-credentials? :body :files :truncated :language :content :type :keywordize-keys]}, :doc nil}